--УПРАЖНЕНИЯ 2_3 Преобразование вывода и встроенные функции
--1. Составьте запрос для таблицы STUDENT таким образом, чтобы
--выходная таблица содержала один столбец, содержащий после-
--довательность разделенных символом “;” (точка с запятой) зна-
--чений всех столбцов этой таблицы; при этом текстовые значения
--должны отображаться прописными символами (верхний регистр),
--т. е. быть представленными в следующем виде:
--10;КУЗНЕЦОВ;БОРИС;0;БРЯНСК; 8.12.1987;10.

--2. Составьте запрос для таблицы STUDENT таким образом, что-
--бы выходная таблица содержала всего один столбец в сле-
--дующем виде: Б.КУЗНЕЦОВ; место жительства - БРЯНСК;
--родился - 8.12.87.

--3. Составьте запрос для таблицы STUDENT таким образом, что-
--бы выходная таблица содержала всего один столбец в сле-
--дующем виде: б.кузнецов; место жительства - брянск;
--родился: 8-дек-1987.

--4. Составьте запрос для таблицы STUDENT таким образом, чтобы
--выходная таблица содержала всего один столбец в следующем
--виде: Борис Кузнецов родился в 1987 году.

--5. Составьте запрос, выводящий фамилии, имена студентов и вели-
--чину получаемых ими стипендий, при этом значения стипендий
--должны быть увеличены в 100 раз.

--6. То же, что и в упр. 4, но только для студентов 1, 2 и 4 курсов и
--таким образом, чтобы фамилии и имена были выведены пропис-
--ными буквами.38 Гл. 2. Выборка данных (оператор SELECT)

--7. Составьте запрос для таблицы UNIVERSITY таким образом, что-
--бы выходная таблица содержала всего один столбец в следующем
--виде: Код-10; ВГУ-г.ВОРОНЕЖ; Рейтинг=296.

--8. То же, что и в упр. 7, но значения рейтинга требуется округлить
--до первого знака (например, значение 382 округляется до 400).


--УПРАЖНЕНИЯ агрегирование и группировка
--1. Напишите запрос для подсчета количества студентов, сдававших
--экзамен по предмету обучения с идентификатором 20.
--select count(student_id) -- is NULL не включает




		

--2. Напишите запрос, который позволяет подсчитать в таблице
--EXAM_MARKS количество различных предметов обучения.



--3. Напишите запрос, который для каждого студента выполняет вы-
--борку его идентификатора и минимальной из полученных им
--оценок.


 

--4. Напишите запрос, который для каждого студента выполняет вы-
--борку его идентификатора и максимальной из полученных им
--оценок.



--5. Напишите запрос, выполняющий вывод первой по алфавиту фа-
--милии студента, начинающейся на букву ‘И’.
select min(surname),
       max(surname)
  from student
 where surname like 'И%';

--6. Напишите запрос, который для каждого предмета обучения вы-
--водит наименование предмета и максимальное значение номера
--семестра, в котором этот предмет преподается.
select subj_name,
       max(semester)
  from subject
 group by subj_name;

--7. Напишите запрос, который для каждого конкретного дня сдачи
--экзамена выводит данные о количестве студентов, сдававших
--экзамен в этот день.
select exam_date,
       count(distinct student_id)
  from exam_marks
 group by exam_date;

--8. Напишите запрос, выдающий средний балл для каждого
--студента.

--9. Напишите запрос, выдающий средний балл для каждого
--экзамена.

--10. Напишите запрос, определяющий количество сдававших студен-
--тов для каждого экзамена.

--11. Напишите запрос для определения количества предметов, изучаемых на каждом курсе.

--12. Для каждого университета напишите запрос, 
--выводящий суммарную стипендию обучающихся в нем студентов, с последующей
--сортировкой списка по этому значению.

--13. Для каждого семестра напишите запрос, выводящий общее
--количество часов, отводимое на изучение соответствующих
--предметов.

--14. Для каждого студента напишите запрос, выводящий среднее зна-
--чение оценок, полученных им на всех экзаменах.

--15. Для каждого студента напишите запрос, выводящий среднее зна-
--чение оценок, полученных им по каждому предмету.

--16. Напишите запрос, выводящий количество студентов, проживаю-
--щих в каждом городе. Список отсортировать в порядке убывания
--количества студентов.
SELECT CITY, count(distinct STUDENT_ID) as cnt
  FROM student
  GROUP BY CITY
  order BY cnt;
  --order BY 2 DESC;
  --order BY count(DISTINCT STUDENT_ID);

--17. Для каждого университета напишите запрос, выводящий количе-
--ство обучающихся в нем студентов, с последующей сортировкой
--списка по этому количеству.

--18. Для каждого университета напишите запрос, выводящий коли-
--чество работающих в нем преподавателей, с последующей сорти-
--ровкой списка по этому количеству.
select univ_id,
       count(lecturer_id)
  from lecturer
 group by ( univ_id )
 order by count(lecturer_id) desc;

--SELECT * 
--FROM LECTURER
--order BY univ_id

--19. Для каждого университета напишите запрос, выводящий сумму
--стипендии, выплачиваемой студентам каждого курса.

SELECT UNIV_ID, KURS, sum(STIPEND)
FROM student
GROUP BY UNIV_ID, KURS
order by UNIV_ID, KURS;

--20. Для каждого города напишите запрос, выводящий максимальный
--рейтинг университетов, в нем расположенных, с последующей
--сортировкой списка по значениям рейтингов.

--21. Для каждого дня сдачи экзаменов напишите запрос, выводящий
--среднее значение всех экзаменационных оценок.

--22. Для каждого дня сдачи экзаменов напишите запрос, выводящий
--максимальные оценки, полученные по каждому предмету.

--23. Для каждого дня сдачи экзаменов напишите запрос, выводящий
--общее количество студентов, сдававших экзамены.

--24. Для каждого дня сдачи экзаменов напишите запрос, выводящий
--общее количество экзаменов, сдававшихся каждым студентом.

--25. Для каждого преподавателя напишите запрос, выводящий коли-
--чество преподаваемых им предметов.

--26. Для каждого предмета напишите запрос, выводящий количество
--преподавателей, ведущих по нему занятия.

--27. Напишите запрос, выполняющий вывод количества студентов,
--имеющих только отличные оценки.
select count(*)
  from (
   select student_id,
          min(mark)
     from exam_marks
    group by student_id
   having min(mark) = 5
) ;

--28. Напишите запрос, выполняющий вывод количества экзаменов,
--сданных (с положительной оценкой) студентом с идентификатором 32.
select count(exam_id)
  from exam_marks
 where student_id = 32
   and mark >= 3;